# -------------------------------------
# Build stage with .NET SDK
# -------------------------------------
FROM mcr.microsoft.com/dotnet/sdk:9.0-windowsservercore-ltsc2019 AS build

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop';"]

WORKDIR /src
COPY apps/pwabuilder-microsoft-store/ .

# Restore
RUN dotnet restore "PWABuilderWindowsChromium.csproj"
# # Build the project
RUN dotnet build "PWABuilderWindowsChromium.csproj" -c Release -o /app/build
RUN dotnet publish "PWABuilderWindowsChromium.csproj" -c Release -o /app/publish /p:UseAppHost=false

# -------------------------------------
# Final runtime image using full Windows image
# -------------------------------------
FROM mcr.microsoft.com/windows/server:ltsc2022 AS final

# App working directory
WORKDIR /app
SHELL ["cmd", "/S", "/C"]

# Set env variables (like aspnet image would)
ENV ASPNETCORE_URLS=http://+:5000
ENV ASPNETCORE_ENVIRONMENT=Production

# Expose the same ports as the ASP.NET Core base image
EXPOSE 5000
EXPOSE 443

# Install dotnet runtime using dotnet-install script
COPY apps/pwabuilder-microsoft-store/Resources/dotnet-install.ps1 .
RUN powershell -ExecutionPolicy Bypass -File ./dotnet-install.ps1 -Runtime aspnetcore -Version 9.0.0 -InstallDir C:\dotnet
RUN powershell $env:Path = 'C:\dotnet;' + $env:Path; [Environment]::SetEnvironmentVariable('PATH', $env:Path, [System.EnvironmentVariableTarget]::Machine)

# Install Windows SDK tools
RUN ["powershell.exe", "Set-ExecutionPolicy RemoteSigned -Scope CurrentUser"]

RUN powershell -Command "$ErrorActionPreference = 'Stop'; Invoke-WebRequest https://go.microsoft.com/fwlink/?linkid=2120843 -OutFile downloadsdk.exe -UseBasicParsing"
RUN powershell -Command "$ErrorActionPreference = 'Stop'; ./downloadsdk.exe /quiet /norestart /log log.txt"
RUN powershell -Command "$ErrorActionPreference = 'Stop'; Remove-Item downloadsdk.exe -Force

# Copy app from build stage
COPY --from=build /app/publish/ C:/app/

# Start the app
CMD dotnet "PWABuilderWindowsChromium.dll"
